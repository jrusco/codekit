name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm install --ignore-platform-reqs --production=false  # Install all deps, ignore Windows binaries
        
      - name: Run linting
        run: npm run lint || exit 0  # Allow warnings, continue build
        continue-on-error: true
        
      - name: Run unit tests
        run: npm run test:unit
        
      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
  # Health check job
  health-check:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Wait for deployment propagation
        run: sleep 60
        
      - name: Health check
        run: |
          echo "Checking GitHub Pages deployment..."
          SITE_URL="https://${{ github.repository_owner }}.github.io/codekit/"
          
          # Check if site is accessible
          if curl -f -s -L -o /dev/null "$SITE_URL"; then
            echo "✅ Site is live and responding"
          else
            echo "⚠️ Site may still be propagating (this is normal for first deployment)"
          fi
